#+title: Organisation
#+COLUMNS: %50ITEM(Task) %7TODO %14CLOCKSUM(Clock)

* Organisation
** DONE [#A] Call - Friday - 1:45 [2/2]
:LOGBOOK:
CLOCK: [2024-01-12 Fri 15:03]--[2024-01-12 Fri 15:16] =>  0:13
CLOCK: [2024-01-12 Fri 13:15]--[2024-01-12 Fri 14:47] =>  1:32
:END:
- [X] call with Anna and Viktor
  - [X] update about the last week
  - [X] suggest Prototyping for Incentives Protocoll
  - [X] scratch out Opti
    - [X] Show Software Design Workflow
  - [X] reiterate Ideas
  - [X] Come up with Demi
- [X] Add some notes to HackMD
  - [X] readjust Opti.md
  - [X] readjust Demi.md (ported)
  - [X] call it a day
** DONE [#B] Bare Setup - Saturday - 3:56 [4/4]
:LOGBOOK:
CLOCK: [2024-01-13 Sat 14:10]--[2024-01-13 Sat 14:59] =>  0:49
CLOCK: [2024-01-13 Sat 13:48]--[2024-01-13 Sat 14:10] =>  0:22
CLOCK: [2024-01-13 Sat 12:56]--[2024-01-13 Sat 13:36] =>  0:40
CLOCK: [2024-01-13 Sat 12:15]--[2024-01-13 Sat 12:43] =>  0:28
CLOCK: [2024-01-13 Sat 11:15]--[2024-01-13 Sat 12:01] =>  0:46
CLOCK: [2024-01-13 Sat 10:03]--[2024-01-13 Sat 10:54] =>  0:51
:END:
- [X] do Github Setup
- [X] setup Organisation.org File
  - [X] send message in TG of how it works
- [X] readjust Demi.md
  - [X] rewrite Demi.md
- [X] skratch out a Figma [8/8]
  - [X] create a Frame
  - [X] add colors
  - [X] add Type Combi
  - [X] clean up
  - [X] create Input Field Component
  - [X] create Button Component
  - [X] generate a better logo(ported)
    - [X] go for a die-cut sticker
    - [X] download font
    - [X] create outline
      - [X] export
      - [X] importe, generate componetnt
    - [X] generate one
  - [X] add Figma to Github
** DONE [#B] Design - Sunday - 1:39 [8/8]
:LOGBOOK:
CLOCK: [2024-01-14 Sun 10:05]--[2024-01-14 Sun 10:22] =>  0:17
CLOCK: [2024-01-14 Sun 08:32]--[2024-01-14 Sun 09:54] =>  1:22
:END:
- [X] generate a better logo(ported)
  - [X] go for a die-cut sticker
  - [X] download font
  - [X] create outline
    - [X] export
    - [X] importe, generate componetnt
  - [X] generate one
- [X] setup up export format
- [X] add Cover
- [X] add Intro
- [X] refine Logo - Inspiration
- [X] create Landing Page, which current Design System
- [X] clean up
- [X] export, add to Github
** DONE [#B] Code - Landing Page - Sunday - 6:21 [19/19]
:LOGBOOK:
CLOCK: [2024-01-15 Mon 00:53]--[2024-01-15 Mon 00:58] =>  0:05
CLOCK: [2024-01-15 Mon 00:37]--[2024-01-15 Mon 00:52] =>  0:15
CLOCK: [2024-01-14 Sun 23:54]--[2024-01-15 Mon 00:32] =>  0:38
CLOCK: [2024-01-14 Sun 23:35]--[2024-01-14 Sun 23:51] =>  0:16
CLOCK: [2024-01-14 Sun 22:18]--[2024-01-14 Sun 23:14] =>  0:56
CLOCK: [2024-01-14 Sun 21:41]--[2024-01-14 Sun 21:48] =>  0:07
CLOCK: [2024-01-14 Sun 21:24]--[2024-01-14 Sun 21:41] =>  0:17
CLOCK: [2024-01-14 Sun 20:16]--[2024-01-14 Sun 20:51] =>  0:35
CLOCK: [2024-01-14 Sun 15:27]--[2024-01-14 Sun 15:31] =>  0:04
CLOCK: [2024-01-14 Sun 14:08]--[2024-01-14 Sun 15:22] =>  1:14
CLOCK: [2024-01-14 Sun 12:03]--[2024-01-14 Sun 12:29] =>  0:26
CLOCK: [2024-01-14 Sun 11:17]--[2024-01-14 Sun 11:59] =>  0:42
CLOCK: [2024-01-14 Sun 10:24]--[2024-01-14 Sun 11:10] =>  0:46
:END:
- [X] add inkathon! to current project somehow
- [X] make package.json somehow work for docs
- [X] make package.json somehow work for frontend
- [X] make package.json somehow work for contracts
- [X] make scripts work in root folder
- [X] make everythin work from root
- [X] commit that mess ina reasonable order ^^
- [X] add current state of Organisation.org
- [X] call with Botond, ask about Validation AI Setup
- [X] write quick notes, add to docs/notes
- [X] rearange docs package, add notes, change logo
- [X] code input field
  - [X] get rid of boilerplate
  - [X] add input css in global.css
  - [X] update aichat to gpt4
  - [X] add state via css
- [X] code button
- [X] align button and input field
- [X] code logo
- [X] code landing page
- [X] build
- [X] commit progress
- [X] deploy draft (postpone, seems timeconsuming)
** DONE [#A] CODE - Smart Contract Draft - Monday - 6:20 [10/10]
:LOGBOOK:
CLOCK: [2024-01-15 Mon 19:15]--[2024-01-15 Mon 20:05] =>  0:50
CLOCK: [2024-01-15 Mon 17:36]--[2024-01-15 Mon 17:57] =>  0:21
CLOCK: [2024-01-15 Mon 16:43]--[2024-01-15 Mon 17:13] =>  0:30
CLOCK: [2024-01-15 Mon 16:24]--[2024-01-15 Mon 16:41] =>  0:17
CLOCK: [2024-01-15 Mon 16:07]--[2024-01-15 Mon 16:20] =>  0:13
CLOCK: [2024-01-15 Mon 15:45]--[2024-01-15 Mon 16:07] =>  0:22
CLOCK: [2024-01-15 Mon 15:23]--[2024-01-15 Mon 15:29] =>  0:06
CLOCK: [2024-01-15 Mon 13:36]--[2024-01-15 Mon 14:44] =>  1:08
CLOCK: [2024-01-15 Mon 12:54]--[2024-01-15 Mon 13:32] =>  0:38
CLOCK: [2024-01-15 Mon 12:06]--[2024-01-15 Mon 12:32] =>  0:26
CLOCK: [2024-01-15 Mon 11:35]--[2024-01-15 Mon 12:06] =>  0:31
CLOCK: [2024-01-15 Mon 10:49]--[2024-01-15 Mon 11:11] =>  0:22
CLOCK: [2024-01-15 Mon 10:37]--[2024-01-15 Mon 10:48] =>  0:11
CLOCK: [2024-01-15 Mon 10:24]--[2024-01-15 Mon 10:37] =>  0:13
CLOCK: [2024-01-15 Mon 10:10]--[2024-01-15 Mon 10:22] =>  0:12
:END:
- [X] deploy draft (postpone, seems timeconsuming)
- [X] update doom
- [X] try netlify deploy
- [X] setup netlify config
- [X] deploy on frandemi.netlify.app
- [X] Write stupid contract and compile it
- [X] rename thingies
- [X] deploy on local
- [X] test via cli
- [X] call node and validator in frontend
  - [X] create ContractOverview Component
  - [X] add style for h1, h2, h3, p
  - [X] change background color of page
  - [X] create Design for ContractOverview
    - [X] create Variable Component
    - [X] create Function Component
    - [X] code Variable Component
    - [X] code Function Component
    - [X] combine it in ContractOverview
    - [X] fix css
    - [X] make it reusable
      - [X] make FunctionComp reusable
      - [X] make VariableComp reusable
      - [X] make ContractOverview reusable
    - [X] add it nicey to Main Page
    - [X] change favicon
    - [X] participate in Aleph Hack Call
    - [X] make FunctionComp clicky
      - [X] add Custon Contract
        - [X] figure out how deployment works with current setup
          - [X] start a from the template, figure it out
            - [X] git clone
            - [X] get it running
            - [X] switch to local
              - [X] import alice
            - [X] w.i.p. (ported)

** DONE [#A] CODE - Button Clicky - Tuesday - 1:47 [6/6]
:LOGBOOK:
CLOCK: [2024-01-16 Tue 12:50]--[2024-01-16 Tue 13:05] =>  0:15
CLOCK: [2024-01-16 Tue 12:19]--[2024-01-16 Tue 12:47] =>  0:28
CLOCK: [2024-01-16 Tue 11:46]--[2024-01-16 Tue 12:13] =>  0:27
CLOCK: [2024-01-16 Tue 11:27]--[2024-01-16 Tue 11:42] =>  0:15
CLOCK: [2024-01-16 Tue 10:51]--[2024-01-16 Tue 11:13] =>  0:22
:END:
- [X] figure out how to make contracts deployment.ts file (ported)
- [X] explore bare inkathon workflow
- [X] import Alice in Wallet
- [X] create new contract for testing
- [X] read from contract and display it on Button Click
- [X] write to contract on Button Click (ported)
** DONE [#A] CODE - Button Clicky - Wednesday - 6:11 [14/14]
:LOGBOOK:
CLOCK: [2024-01-17 Wed 20:28]--[2024-01-17 Wed 21:25] =>  0:57
CLOCK: [2024-01-17 Wed 17:48]--[2024-01-17 Wed 19:23] =>  1:35
CLOCK: [2024-01-17 Wed 16:59]--[2024-01-17 Wed 17:37] =>  0:38
CLOCK: [2024-01-17 Wed 16:09]--[2024-01-17 Wed 16:39] =>  0:30
CLOCK: [2024-01-17 Wed 14:04]--[2024-01-17 Wed 14:13] =>  0:09
CLOCK: [2024-01-17 Wed 13:29]--[2024-01-17 Wed 14:03] =>  0:34
CLOCK: [2024-01-17 Wed 12:32]--[2024-01-17 Wed 13:16] =>  0:44
CLOCK: [2024-01-17 Wed 11:41]--[2024-01-17 Wed 12:14] =>  0:33
CLOCK: [2024-01-17 Wed 11:03]--[2024-01-17 Wed 11:34] =>  0:31
:END:
- [X] write to contract on Button Click (ported)
- [X] figure out how to make contracts deployment.ts file (ported)
- [X] handle github 2fa without phone
- [X] add plantuml to docs
- [X] add tasklist to docs
- [X] understand workflow and what happens where
- [X] make button clicky in boilerplate
- [X] try to fix script in Demi
  - [X] rewrite contracts scripts and make it works and get deployment
  - [X] rewrite frontend to make it work
- [X] commit it nicley
- [X] add all current functions. (ported)
- [X] try leva for a debug ui
- [X] add read button to leva
- [X] figure out how to keep state in sync with leva
- [X] add a write state button (ported)
** DONE [#A] CODE - Button Clicky - Thursday - 3:44 [7/7]
:LOGBOOK:
CLOCK: [2024-01-18 Thu 18:10]--[2024-01-18 Thu 19:01] =>  0:51
CLOCK: [2024-01-18 Thu 17:32]--[2024-01-18 Thu 17:53] =>  0:21
CLOCK: [2024-01-18 Thu 14:24]--[2024-01-18 Thu 14:45] =>  0:21
CLOCK: [2024-01-18 Thu 13:52]--[2024-01-18 Thu 14:14] =>  0:22
CLOCK: [2024-01-18 Thu 12:42]--[2024-01-18 Thu 13:48] =>  1:06
CLOCK: [2024-01-18 Thu 11:09]--[2024-01-18 Thu 11:30] =>  0:21
CLOCK: [2024-01-18 Thu 10:45]--[2024-01-18 Thu 11:07] =>  0:22
:END:
- [X] configure zellij
- [X] try new colorscheme (failed )
- [X] rewrite contract for better getters
- [X] make leva work with getter function
- [X] call with Botond

- [X] add a write state button (ported again)
- [X] add all current functions. (ported again)

** DONE [#A] CODE - Button Clicky - Friday - 2:44 [6/6]
:LOGBOOK:
CLOCK: [2024-01-19 Fri 15:32]--[2024-01-19 Fri 15:51] =>  0:19
CLOCK: [2024-01-19 Fri 15:12]--[2024-01-19 Fri 15:28] =>  0:16
CLOCK: [2024-01-19 Fri 14:00]--[2024-01-19 Fri 14:45] =>  0:45
CLOCK: [2024-01-19 Fri 13:04]--[2024-01-19 Fri 13:11] =>  0:07
CLOCK: [2024-01-19 Fri 12:38]--[2024-01-19 Fri 13:03] =>  0:25
CLOCK: [2024-01-19 Fri 12:29]--[2024-01-19 Fri 12:34] =>  0:05
CLOCK: [2024-01-19 Fri 11:40]--[2024-01-19 Fri 12:27] =>  0:47
:END:
- [X] add a write state button (ported again)
- [X] add all current functions. (ported again)
  - [X] new()
  - [X] init()
  - [X] get_owner()
  - [X] set_owner()
  - [X] get_validator()
  - [X] set_validator() (ported again)
  - [X] get_node()
  - [X] set_node() (ported again)
- [X] group then in read and write function
- [X] add argument to build command, --debug-on, write inkathon team
- [X] find a solution to call from leva
- [X] figure out how to update value nicely (ported)
  - [X] there is transient
  - [X] useCallback, doesnt non cool things, don't know how to avoid, yet

** DONE [#A] Do Debug UI - Monday - 3:19 [4/4]
:LOGBOOK:
CLOCK: [2024-01-22 Mon 14:35]--[2024-01-22 Mon 16:05] =>  1:30
CLOCK: [2024-01-22 Mon 13:47]--[2024-01-22 Mon 14:25] =>  0:38
CLOCK: [2024-01-22 Mon 12:53]--[2024-01-22 Mon 13:31] =>  0:38
CLOCK: [2024-01-22 Mon 11:53]--[2024-01-22 Mon 12:09] =>  0:17
CLOCK: [2024-01-22 Mon 11:15]--[2024-01-22 Mon 11:32] =>  0:17
:END:
- [X] set_validator() (ported again again)
- [X] set_node() (ported again again)
- [X] figure out how to update value nicely (ported again)
  - [X] there is transient
  - [X] useCallback, doesnt non cool things, don't know how to avoid, yet
- [X] repeat useHooks of react to find bug
** DONE [#A] Do Debug UI - Tuesday - 2:45 [4/4]
:LOGBOOK:
CLOCK: [2024-01-23 Tue 14:25]--[2024-01-23 Tue 16:15] =>  1:50
CLOCK: [2024-01-23 Tue 13:12]--[2024-01-23 Tue 14:07] =>  0:55
:END:
- [X] set_validator() (ported again again)
- [X] set_node() (ported again again)
- [X] figure out how to update value nicely (ported again)
  - [X] there is transient
  - [X] useCallback, doesnt non cool things, don't know how to avoid, yet
- [X] forgot to record what i actually did
** DONE [#A] Do Debug UI - Wednesday - 4:00 [1/1]
:LOGBOOK:
CLOCK: [2024-01-24 Wed 14:25]--[2024-01-24 Wed 16:25] =>  2:00
CLOCK: [2024-01-24 Wed 10:25]--[2024-01-24 Wed 12:25] =>  2:00
:END:
- [X] fix more bugs on Debug UI
** DONE [#A] Make it Work - Friday - 5:50 [10/10]
:LOGBOOK:
CLOCK: [2024-01-26 Fri 18:21]--[2024-01-26 Fri 18:49] =>  0:28
CLOCK: [2024-01-26 Fri 17:21]--[2024-01-26 Fri 18:13] =>  0:52
CLOCK: [2024-01-26 Fri 16:06]--[2024-01-26 Fri 16:28] =>  0:22
CLOCK: [2024-01-26 Fri 15:52]--[2024-01-26 Fri 16:06] =>  0:14
CLOCK: [2024-01-26 Fri 15:08]--[2024-01-26 Fri 15:52] =>  0:44
CLOCK: [2024-01-26 Fri 12:25]--[2024-01-26 Fri 14:01] =>  1:36
CLOCK: [2024-01-26 Fri 11:29]--[2024-01-26 Fri 12:10] =>  0:41
CLOCK: [2024-01-26 Fri 10:08]--[2024-01-26 Fri 11:01] =>  0:53
:END:
- [X] call with Botond, quick update
- [X] delete debug, do it again
- [X] copy structure from Greeter, maybe
- [X] useState instead of other options
- [X] lets goo make butttooon
- [X] record result send to bottond
- [X] throw into component
- [X] add nodes, validator, tasks to contracts
- [X] add read function to nodes, validator, tasks
- [X] add write function to nodes, validators, tasks (ported)
** DONE [#C] Fix PC - Saturday - 5:00 [3/3]
:LOGBOOK:
CLOCK: [2024-01-27 Sat 10:01]--[2024-01-27 Sat 15:01] =>  5:00
:END:
- [X] PC got fucked up, fix it (ported)
- [X] be frustated
- [X] add write function to nodes, validators, tasks (ported)
** DONE [#C] Fix PC - Sunday - 1:43 [3/3]
:LOGBOOK:
CLOCK: [2024-01-28 Sun 09:35]--[2024-01-28 Sun 11:18] =>  1:43
:END:
- [X] PC got fucked up, fix it (ported)
- [X] be frustated
- [X] add write function to nodes, validators, tasks (ported)

** DONE [#A] Make it nicey - 2:45 [6/6]
:LOGBOOK:
CLOCK: [2024-01-29 Mon 20:13]--[2024-01-29 Mon 20:41] =>  0:28
CLOCK: [2024-01-29 Mon 19:14]--[2024-01-29 Mon 20:10] =>  0:56
CLOCK: [2024-01-29 Mon 17:32]--[2024-01-29 Mon 18:45] =>  1:13
CLOCK: [2024-01-29 Mon 17:24]--[2024-01-29 Mon 17:32] =>  0:08
:END:
- [X] add write function to nodes, validators, tasks (ported)
- [X] figuring where to spend the last hours
- [X] add isInit to contract
- [X] add tasks
- [X] add nodes
- [X] add validators
** DONE [#A] Finish it up - 6:05 [15/15]
:LOGBOOK:
CLOCK: [2024-01-31 Wed 02:32]--[2024-01-31 Wed 03:12] =>  0:40
CLOCK: [2024-01-31 Wed 01:46]--[2024-01-31 Wed 02:28] =>  0:42
CLOCK: [2024-01-30 Tue 15:18]--[2024-01-30 Tue 15:27] =>  0:09
CLOCK: [2024-01-30 Tue 15:13]--[2024-01-30 Tue 15:16] =>  0:03
CLOCK: [2024-01-30 Tue 14:54]--[2024-01-30 Tue 15:13] =>  0:19
CLOCK: [2024-01-30 Tue 12:39]--[2024-01-30 Tue 13:17] =>  0:38
CLOCK: [2024-01-30 Tue 12:34]--[2024-01-30 Tue 12:46] =>  0:12
CLOCK: [2024-01-30 Tue 11:08]--[2024-01-30 Tue 12:18] =>  1:10
CLOCK: [2024-01-30 Tue 10:18]--[2024-01-30 Tue 11:00] =>  0:42
CLOCK: [2024-01-30 Tue 08:34]--[2024-01-30 Tue 10:06] =>  1:32
:END:
- [X] Seperate it Milestones
- [X] Create demiOne Contract
- [X] Create demiTwo Contract
- [X] add LevaGreeter Component
- [X] add LevaDemiOne Component
- [X] add LevaDemiTwo Component
- [X] adjust configuration
- [X] commit everything nicely
- [X] test everything
  - [X] test greeter
  - [X] test demione
  - [X] test demitwo
- [X] record something, send to botond
- [X] fix encountered demitwo bug
- [X] write README.md
- [X] record for submission
- [X] upload
- [X] call it a day
** DONE [#C] Throw 4 days more in - 3:15 [28/28]
:LOGBOOK:
CLOCK: [2024-02-01 Thu 16:04]--[2024-02-01 Thu 16:14] =>  0:10
CLOCK: [2024-02-01 Thu 15:11]--[2024-02-01 Thu 16:04] =>  0:53
CLOCK: [2024-02-01 Thu 14:32]--[2024-02-01 Thu 14:37] =>  0:05
CLOCK: [2024-02-01 Thu 13:34]--[2024-02-01 Thu 14:11] =>  0:37
CLOCK: [2024-02-01 Thu 12:35]--[2024-02-01 Thu 13:29] =>  0:54
CLOCK: [2024-02-01 Thu 11:38]--[2024-02-01 Thu 12:05] =>  0:27
CLOCK: [2024-02-01 Thu 11:25]--[2024-02-01 Thu 11:34] =>  0:09
:END:
- [X] fix bug with tasks
- [X] add .gitattributes
- [X] clean up root repo
- [X] write demithree
  - [X] setup new cargo contract
  - [X] write deployscript
  - [X] add to workspace
  - [X] variables-
- [X] initliase Throw4DaysMoreIn - Journey
- [X] fix task bug in LevaDemiTwo.tsx
- [X] add .gitattributes, only .ts and .rs
- [X] fix, gh doesnt pick it up
- [X] rm .rtx.toml && rm .netlify.toml
- [X] intialise demithree
- [X] add demithree to Workspace
- [X] add deployscript 4 demithree
- [X] test deployments
- [X] add struct, init(), get_init()
- [X] add change_owner(), get_owner()
- [X] add add_node(), get_nodes()
- [X] add add_validator(), get_validators()
- [X] add add_task(), gets_task(), get_tasks()
- [X] update tasks to Mapping
- [X] add ValidationRating, validated_tasks, validated_tasks_count
- [X] add validate_task(), get_validated_rating()
- [X] rm get_tasks()
- [X] add registered_nodes, registered_validators
- [X] add approved_nodes, approved_validator
- [X] rm nodes, validators, getters, adders
- [X] add approve_node(), approve_validator()
- [X] rm empty_message()
- [X] rearange in read/write section
** DONE [#C] Throw 4 days more in - 2:38 [16/16]
:LOGBOOK:
CLOCK: [2024-02-02 Fri 18:08]--[2024-02-02 Fri 18:15] =>  0:07
CLOCK: [2024-02-02 Fri 11:54]--[2024-02-02 Fri 12:10] =>  0:16
CLOCK: [2024-02-02 Fri 11:18]--[2024-02-02 Fri 11:48] =>  0:30
CLOCK: [2024-02-02 Fri 10:28]--[2024-02-02 Fri 11:09] =>  0:41
CLOCK: [2024-02-02 Fri 09:31]--[2024-02-02 Fri 10:23] =>  0:52
CLOCK: [2024-02-02 Fri 09:12]--[2024-02-02 Fri 09:24] =>  0:12
:END:
- [X] grab a coffee
- [X] (contracts) fix typo
- [X] (contracts) add getters
- [X] (contracts) rename scripts
- [X] (docs) update Organisation.org
- [X] (frontend) initialise LeveDemiThree.tsx
- [X] (contracts) commit latest deployments
- [X] (contracts) update .gitignore
- [X] (frontend) rearrange LeveGreeter.tsx
- [X] (frontend) rearrange LevaDemiOne.tsx
- [X] (frontend) rearrange LevaDemiTwo.tsx
- [X] (frontend) npm run format
- [X] (contracts) fix typo
- [X] (frontend) setup read boileplate for LeveDemiThree.tsx
- [X] (contracts) update demithree
- [X] (frontend) align with contract, LevaDemiThree.tsx
** DONE [#C] Throw 4 days more in - 2:35 [8/8]
:LOGBOOK:
CLOCK: [2024-02-03 Sat 11:59]--[2024-02-03 Sat 12:19] =>  0:20
CLOCK: [2024-02-03 Sat 11:38]--[2024-02-03 Sat 11:50] =>  0:12
CLOCK: [2024-02-03 Sat 10:12]--[2024-02-03 Sat 10:39] =>  0:27
CLOCK: [2024-02-03 Sat 09:53]--[2024-02-03 Sat 10:02] =>  0:09
CLOCK: [2024-02-03 Sat 08:50]--[2024-02-03 Sat 09:30] =>  0:40
CLOCK: [2024-02-03 Sat 08:33]--[2024-02-03 Sat 08:45] =>  0:12
CLOCK: [2024-02-03 Sat 08:12]--[2024-02-03 Sat 08:27] =>  0:15
CLOCK: [2024-02-03 Sat 07:50]--[2024-02-03 Sat 08:10] =>  0:20
:END:
- [X] resetup up
- [X] finish things from yesterday
- [X] grab a coffee
- [X] (docs) update Organisation.org
- [X] (frontend) rearange input formats, add get_owner(), init()
- [X] (frontend) update read Functions
- [X] (frontend) add boilerplate for WRITE Function Section
- [X] (contracts) add logs for finding bug
** DONE [#C] Throw 4 days more in 3:08 [21/21]
:LOGBOOK:
CLOCK: [2024-02-04 Sun 14:49]--[2024-02-04 Sun 15:13] =>  0:24
CLOCK: [2024-02-04 Sun 14:19]--[2024-02-04 Sun 14:43] =>  0:24
CLOCK: [2024-02-04 Sun 12:59]--[2024-02-04 Sun 13:48] =>  0:49
CLOCK: [2024-02-04 Sun 12:20]--[2024-02-04 Sun 12:23] =>  0:03
CLOCK: [2024-02-04 Sun 11:45]--[2024-02-04 Sun 12:17] =>  0:32
CLOCK: [2024-02-04 Sun 10:47]--[2024-02-04 Sun 11:29] =>  0:42
CLOCK: [2024-02-04 Sun 10:31]--[2024-02-04 Sun 10:41] =>  0:10
CLOCK: [2024-02-04 Sun 10:26]--[2024-02-04 Sun 10:30] =>  0:04
:END:
- [X] (docs) update Organisation.org
- [X] (frontend) add change_owner, add_task & ...
- [X] (frontend) add the rest of callers to Leva
- [X] (docs) intialise TestingWorkflow.md
- [X] (docs) update TestingWorkflow.md
- [X] run test workflow A
- [X] record A
- [X] (contracts) adjust register_node(), register_validator()
- [X] (docs) update TestingWorkflow, do first runthruh
- [X] (frontend) add the rest of callers to Leva
- [X] add it to YT, nomatter the current outcome.
- [X] (./README) add DemiThree Status
- [X] add timestamps to Organsiation File
- [X] add isInit to Leva, fix it either ^^ (ported to futurue)
- [X] fix unregister_node (ported to future)
- [X] fix unregister_validator (ported to future)
- [X] add task count to TestingWorkflow (ported to future)
- [X] fix taskCount getter (ported to future)
- [X] add validated_task thingy correctly (ported to future)
- [X] commit current Organisation.File
- [X] call it a day
